#define ll long long
 const int N = 1e5+5;
const int M = 1e9+7;
ll binpow(ll a,ll b,ll p){
    if(b==0)return 1;
    ll t=binpow(a,b/2,p);
    if(b%2)return (((a*t)%p)*t)%p;
    else return ((t*t)%p);
}

ll fact[N],invfact[N];
void init(){
    fact[0]=1;
    for(ll i=1;i<N;i++){fact[i]=i*fact[i-1]%M;}
    invfact[N-1]=binpow(fact[N-1],M-2,M);
    for(ll i=N-2;i>=0;i--){
        invfact[i]=(i+1)*invfact[i+1]%M;
    }
}
ll ncr(ll n,ll r,ll p){
    return (((fact[n]*invfact[n-r])%p)*invfact[r])%p;
}
bool f = 0;
class Solution {
  public:
    int bestNumbers(int N, int A, int B, int C, int D) {
        // code here
        if(f==0)
        {
            f = 1;
            init();
        }
        ll ans = 0;
        for(int i=0; i<=N; i++)
        {
            int sum = i*A+(N-i)*B;
            bool good = true;
            while(sum>0)
            {
                if(sum%10!=C && sum%10!=D)
                {
                    good = false;
                    break;
                }
                sum /= 10;
            }
            if(good)
            {
                ans += ncr(N,i,M);
                ans %= M;
            }
        }
        return ans;
    }
};
